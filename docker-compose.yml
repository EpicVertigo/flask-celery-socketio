version: "3.6"
services:
  flask:
    container_name: flask
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
    environment:
      FLASK_ENV: development
      RABBIT_MQ_URL: amqp://admin:admin@rabbit:5672
      DB_URI: postgresql://admin:admin@postgres:5432/flask
    networks:
      - backend
    depends_on:
      - rabbit
      - postgres
    command:
      [
        "gunicorn",
        "--bind",
        "0.0.0.0:5000",
        "--workers=1",
        "app:app",
        "--worker-class=eventlet",
      ]

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./:/app
    depends_on:
      - rabbit
      - postgres
    networks:
      - backend
    environment:
      RABBIT_MQ_URL: amqp://admin:admin@rabbit:5672
      DB_URI: postgresql://admin:admin@postgres:5432/flask
    command:
      [
        "celery",
        "-A",
        "app.celery",
        "worker",
        "--loglevel=info",
        "--uid=nobody",
        "--gid=nogroup",
      ]

  rabbit:
    container_name: rabbit
    hostname: rabbit
    image: rabbitmq:3.7.15-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"
    networks:
      - backend
    logging:
      driver: none

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "admin"
      POSTGRES_DB: "flask"
    volumes:
      - ./dbdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend
    logging:
      driver: none

networks:
  backend:
    name: backend
